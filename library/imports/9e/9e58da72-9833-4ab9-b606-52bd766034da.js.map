{"version":3,"sources":["assets\\scripts\\manager\\SoundManager.js"],"names":["SoundManager","cc","Class","Component","properties","audioSource","type","AudioSource","bkg_SoundInGame","AudioClip","currentAudio","soundActive","onLoad","sys","localStorage","setItem","soundInGame","instance","musicBkg","loader","loadResDir","error","result","start","dynamicallyPlayMusic","_soundResource","_loop","_isSFX","isSFX","loadRes","err","clip","audioEngine","play","pauseAll","dynamicallyStopMusic","pause","stopMusic","playMusic","playMouse"],"mappings":";;;;;;;;AAAA,IAAIA,YAAY,GAAGC,EAAE,CAACC,KAAH,CAAS;AACxB,aAASD,EAAE,CAACE,SADY;AAGxBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,WAAW,EAAE;AACT,iBAAS,IADA;AAETC,MAAAA,IAAI,EAAEL,EAAE,CAACM;AAFA,KADL;AAMRC,IAAAA,eAAe,EAAE;AACb,iBAAS,IADI;AAEbF,MAAAA,IAAI,EAAEL,EAAE,CAACQ;AAFI,KANT;AAURC,IAAAA,YAAY,EAAE,CAVN;AAWRC,IAAAA,WAAW,EAAE;AAXL,GAHY;AAgBxBC,EAAAA,MAhBwB,oBAgBf;AACLX,IAAAA,EAAE,CAACY,GAAH,CAAOC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqC,IAArC;AACA,SAAKC,WAAL,GAAmB,KAAKR,eAAxB;AACAR,IAAAA,YAAY,CAACiB,QAAb,GAAwB,IAAxB;AACA,QAAIC,QAAQ,GAAG,IAAf;AACAjB,IAAAA,EAAE,CAACkB,MAAH,CAAUC,UAAV,CAAqB,QAArB,EAA+BnB,EAAE,CAACQ,SAAlC,EAA6C,UAACY,KAAD,EAAQC,MAAR,EAAmB;AAC5D,UAAID,KAAK,KAAK,IAAd,EAAoB,CACnB;AACJ,KAHD;AAIH,GAzBuB;AA2BxBE,EAAAA,KA3BwB,mBA2BhB,CACP,CA5BuB;;AA6BxB;AACAC,EAAAA,oBA9BwB,gCA8BHC,cA9BG,EA8BaC,KA9Bb,EA8B4BC,MA9B5B,EA8B2C;AAAA;;AAAA,QAA9BD,KAA8B;AAA9BA,MAAAA,KAA8B,GAAtB,KAAsB;AAAA;;AAAA,QAAfC,MAAe;AAAfA,MAAAA,MAAe,GAAN,IAAM;AAAA;;AAC/D,QAAIA,MAAJ,EAAY;AACR,UAAI,KAAKC,KAAL,IAAc,IAAlB,EAAwB;AACpB3B,QAAAA,EAAE,CAACkB,MAAH,CAAUU,OAAV,CAAkBJ,cAAlB,EAAkCxB,EAAE,CAACQ,SAArC,EAAgD,UAACqB,GAAD,EAAMC,IAAN,EAAe;AAC3D,cAAID,GAAJ,EAAS;AACT,UAAA,KAAI,CAACpB,YAAL,GAAoBT,EAAE,CAAC+B,WAAH,CAAeC,IAAf,CAAoBF,IAApB,EAA0BL,KAA1B,EAAiC,CAAjC,CAApB;AACH,SAHD;AAIH,OALD,MAKO;AACH;AACH;AACJ,KATD,MASO;AACHzB,MAAAA,EAAE,CAAC+B,WAAH,CAAeE,QAAf;AACAjC,MAAAA,EAAE,CAACkB,MAAH,CAAUU,OAAV,CAAkBJ,cAAlB,EAAkCxB,EAAE,CAACQ,SAArC,EAAgD,UAACqB,GAAD,EAAMC,IAAN,EAAe;AAC3D,QAAA,KAAI,CAACrB,YAAL,GAAoBT,EAAE,CAAC+B,WAAH,CAAeC,IAAf,CAAoBF,IAApB,EAA0BL,KAA1B,EAAiC,CAAjC,CAApB;AACH,OAFD;AAGH;AACJ,GA9CuB;AA+CxBS,EAAAA,oBA/CwB,kCA+CD;AACnBlC,IAAAA,EAAE,CAAC+B,WAAH,CAAeI,KAAf,CAAqB,KAAK1B,YAA1B;AACH,GAjDuB;AAkDxB2B,EAAAA,SAlDwB,uBAkDZ;AACR,SAAKhC,WAAL,CAAiB+B,KAAjB;AACH,GApDuB;AAqDxBE,EAAAA,SArDwB,uBAqDZ;AACR,SAAKjC,WAAL,CAAiB4B,IAAjB;AACH,GAvDuB;AAwDxBM,EAAAA,SAxDwB,uBAwDZ;AACR,SAAKf,oBAAL,CAA0B,oBAA1B,EAA+C,KAA/C,EAAqD,KAArD;AACH;AA1DuB,CAAT,CAAnB;eA6DexB","sourceRoot":"/","sourcesContent":["var SoundManager = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        audioSource: {\r\n            default: null,\r\n            type: cc.AudioSource,\r\n        },\r\n\r\n        bkg_SoundInGame: {\r\n            default: null,\r\n            type: cc.AudioClip,\r\n        },\r\n        currentAudio: 0,\r\n        soundActive: 0,\r\n    },\r\n    onLoad() {\r\n        cc.sys.localStorage.setItem('music', 'on');\r\n        this.soundInGame = this.bkg_SoundInGame;\r\n        SoundManager.instance = this;\r\n        let musicBkg = null;\r\n        cc.loader.loadResDir('sounds', cc.AudioClip, (error, result) => {\r\n            if (error !== null) {\r\n            }\r\n        });\r\n    },\r\n\r\n    start() {\r\n    },\r\n    /* Start :  Change Method Load Sound => dynamically */\r\n    dynamicallyPlayMusic(_soundResource, _loop = false, _isSFX = true) {\r\n        if (_isSFX) {\r\n            if (this.isSFX == true) {\r\n                cc.loader.loadRes(_soundResource, cc.AudioClip, (err, clip) => {\r\n                    if (err) return;\r\n                    this.currentAudio = cc.audioEngine.play(clip, _loop, 1);\r\n                });\r\n            } else {\r\n                return;\r\n            }\r\n        } else {\r\n            cc.audioEngine.pauseAll();\r\n            cc.loader.loadRes(_soundResource, cc.AudioClip, (err, clip) => {\r\n                this.currentAudio = cc.audioEngine.play(clip, _loop, 1);\r\n            });\r\n        }\r\n    },\r\n    dynamicallyStopMusic() {\r\n        cc.audioEngine.pause(this.currentAudio);\r\n    },\r\n    stopMusic() {\r\n        this.audioSource.pause();\r\n    },\r\n    playMusic() {\r\n        this.audioSource.play();\r\n    },\r\n    playMouse() { \r\n        this.dynamicallyPlayMusic('sounds/mouse_click',false,false);\r\n    }\r\n});\r\n\r\nexport default SoundManager;"]}