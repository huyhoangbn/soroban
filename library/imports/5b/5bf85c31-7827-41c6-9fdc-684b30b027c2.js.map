{"version":3,"sources":["assets\\scripts\\miniGame\\raphael\\utils\\R.curve.js"],"names":["pathCommand","pathValues","concat","apply","split","has","toFloat","parseFloat","mmax","Math","max","mmin","min","PI","abs","math","pow","upperCase","String","prototype","toUpperCase","cache","string2curve","string2path","clone","obj","Object","res","constructor","key","a2c","x1","y1","rx","ry","angle","large_arc_flag","sweep_flag","x2","y2","recursive","_120","rad","xy","rotate","x","y","X","cos","sin","Y","h","sqrt","rx2","ry2","k","cx","cy","f1","asin","toFixed","f2","df","f2old","x2old","y2old","c1","s1","c2","s2","t","tan","hx","hy","m1","m2","m3","m4","join","newres","i","ii","length","l2c","q2c","ax","ay","_13","_23","parsePathString","pathString","paramCounts","a","c","l","m","r","q","s","v","z","data","replace","b","params","name","toLowerCase","push","splice","path2absolute","pathArray","mx","my","start","crz","pa","call","dots","slice","j","jj","pop","catmullRom2bezier","kk","path2curve","pathString2","p","p2","attrs","bx","by","qx","qy","attrs2","processPath","path","d","pcom","nx","ny","tq","T","Q","fixArc","pp","shift","pi","pcoms1","pcoms2","fixM","path1","path2","a1","a2","pfirst","seg","seg2","seglen","seg2len","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["'use strict';\n\nvar pathCommand = /([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/ig;\nvar pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/ig;\n\nvar concat = 'concat';\nvar apply  = 'apply';\nvar split  = 'split';\nvar has    = 'hasOwnProperty';\n\nvar toFloat = parseFloat;\n\nvar mmax = Math.max;\nvar mmin = Math.min;\nvar PI   = Math.PI;\nvar abs  = Math.abs;\nvar math = Math;\nvar pow  = Math.pow;\n\nvar upperCase = String.prototype.toUpperCase;\n\nvar cache = {\n    string2curve: {},\n    string2path: {}\n};\n\nfunction clone (obj) {\n    if (typeof obj === 'function' || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor();\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\n\nvar a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n    // for more information of where this math came from visit:\n    // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n    var _120 = PI * 120 / 180,\n        rad = PI / 180 * (+angle || 0),\n        res = [],\n        xy,\n        rotate = function (x, y, rad) {\n            var X = x * math.cos(rad) - y * math.sin(rad),\n                Y = x * math.sin(rad) + y * math.cos(rad);\n            return {x: X, y: Y};\n        };\n    if (!recursive) {\n        xy = rotate(x1, y1, -rad);\n        x1 = xy.x;\n        y1 = xy.y;\n        xy = rotate(x2, y2, -rad);\n        x2 = xy.x;\n        y2 = xy.y;\n        var cos = math.cos(PI / 180 * angle),\n            sin = math.sin(PI / 180 * angle),\n            x = (x1 - x2) / 2,\n            y = (y1 - y2) / 2;\n        var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\n        if (h > 1) {\n            h = math.sqrt(h);\n            rx = h * rx;\n            ry = h * ry;\n        }\n        var rx2 = rx * rx,\n            ry2 = ry * ry,\n            k = (large_arc_flag === sweep_flag ? -1 : 1) *\n                math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n            cx = k * rx * y / ry + (x1 + x2) / 2,\n            cy = k * -ry * x / rx + (y1 + y2) / 2,\n            f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n            f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n        f1 = x1 < cx ? PI - f1 : f1;\n        f2 = x2 < cx ? PI - f2 : f2;\n        f1 < 0 && (f1 = PI * 2 + f1);\n        f2 < 0 && (f2 = PI * 2 + f2);\n        if (sweep_flag && f1 > f2) {\n            f1 = f1 - PI * 2;\n        }\n        if (!sweep_flag && f2 > f1) {\n            f2 = f2 - PI * 2;\n        }\n    } else {\n        f1 = recursive[0];\n        f2 = recursive[1];\n        cx = recursive[2];\n        cy = recursive[3];\n    }\n    var df = f2 - f1;\n    if (abs(df) > _120) {\n        var f2old = f2,\n            x2old = x2,\n            y2old = y2;\n        f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n        x2 = cx + rx * math.cos(f2);\n        y2 = cy + ry * math.sin(f2);\n        res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n    }\n    df = f2 - f1;\n    var c1 = math.cos(f1),\n        s1 = math.sin(f1),\n        c2 = math.cos(f2),\n        s2 = math.sin(f2),\n        t = math.tan(df / 4),\n        hx = 4 / 3 * rx * t,\n        hy = 4 / 3 * ry * t,\n        m1 = [x1, y1],\n        m2 = [x1 + hx * s1, y1 - hy * c1],\n        m3 = [x2 + hx * s2, y2 - hy * c2],\n        m4 = [x2, y2];\n    m2[0] = 2 * m1[0] - m2[0];\n    m2[1] = 2 * m1[1] - m2[1];\n    if (recursive) {\n        return [m2, m3, m4][concat](res);\n    } else {\n        res = [m2, m3, m4][concat](res).join()[split](',');\n        var newres = [];\n        for (var i = 0, ii = res.length; i < ii; i++) {\n            newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n        }\n        return newres;\n    }\n};\n\nvar l2c = function (x1, y1, x2, y2) {\n    return [x1, y1, x2, y2, x2, y2];\n};\n\nvar q2c = function (x1, y1, ax, ay, x2, y2) {\n    var _13 = 1 / 3,\n        _23 = 2 / 3;\n    return [\n        _13 * x1 + _23 * ax,\n        _13 * y1 + _23 * ay,\n        _13 * x2 + _23 * ax,\n        _13 * y2 + _23 * ay,\n        x2,\n        y2\n    ];\n};\n\nvar parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n\n    if (typeof pathString !== 'string') {\n        return pathString;\n    }\n\n    if ( cache.string2path[pathString] ) {\n        return clone( cache.string2path[pathString] );\n    }\n\n    var paramCounts = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\n        data = [];\n\n    String(pathString).replace(pathCommand, function (a, b, c) {\n        var params = [],\n            name = b.toLowerCase();\n        c.replace(pathValues, function (a, b) {\n            b && params.push(+b);\n        });\n        if (name === 'm' && params.length > 2) {\n            data.push([b][concat](params.splice(0, 2)));\n            name = 'l';\n            b = b === 'm' ? 'l' : 'L';\n        }\n        if (name === 'r') {\n            data.push([b][concat](params));\n        } else while (params.length >= paramCounts[name]) {\n            data.push([b][concat](params.splice(0, paramCounts[name])));\n            if (!paramCounts[name]) {\n                break;\n            }\n        }\n    });\n\n    return data;\n};\n\nvar path2absolute = function (pathString) {\n    var pathArray = parsePathString(pathString);\n    var res = [],\n        x = 0,\n        y = 0,\n        mx = 0,\n        my = 0,\n        start = 0;\n    if (pathArray[0][0] == 'M') {\n        x = +pathArray[0][1];\n        y = +pathArray[0][2];\n        mx = x;\n        my = y;\n        start++;\n        res[0] = ['M', x, y];\n    }\n    var crz = pathArray.length == 3 && pathArray[0][0] == 'M' && pathArray[1][0].toUpperCase() == 'R' && pathArray[2][0].toUpperCase() == 'Z';\n    for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n        res.push(r = []);\n        pa = pathArray[i];\n        if (pa[0] != upperCase.call(pa[0])) {\n            r[0] = upperCase.call(pa[0]);\n            switch (r[0]) {\n                case 'A':\n                    r[1] = pa[1];\n                    r[2] = pa[2];\n                    r[3] = pa[3];\n                    r[4] = pa[4];\n                    r[5] = pa[5];\n                    r[6] = +(pa[6] + x);\n                    r[7] = +(pa[7] + y);\n                    break;\n                case 'V':\n                    r[1] = +pa[1] + y;\n                    break;\n                case 'H':\n                    r[1] = +pa[1] + x;\n                    break;\n                case 'R':\n                    var dots = [x, y][concat](pa.slice(1));\n                    for (var j = 2, jj = dots.length; j < jj; j++) {\n                        dots[j] = +dots[j] + x;\n                        dots[++j] = +dots[j] + y;\n                    }\n                    res.pop();\n                    res = res[concat](catmullRom2bezier(dots, crz));\n                    break;\n                case 'M':\n                    mx = +pa[1] + x;\n                    my = +pa[2] + y;\n                default:\n                    for (j = 1, jj = pa.length; j < jj; j++) {\n                        r[j] = +pa[j] + ((j % 2) ? x : y);\n                    }\n            }\n        } else if (pa[0] == 'R') {\n            dots = [x, y][concat](pa.slice(1));\n            res.pop();\n            res = res[concat](catmullRom2bezier(dots, crz));\n            r = ['R'][concat](pa.slice(-2));\n        } else {\n            for (var k = 0, kk = pa.length; k < kk; k++) {\n                r[k] = pa[k];\n            }\n        }\n        switch (r[0]) {\n            case 'Z':\n                x = mx;\n                y = my;\n                break;\n            case 'H':\n                x = r[1];\n                break;\n            case 'V':\n                y = r[1];\n                break;\n            case 'M':\n                mx = r[r.length - 2];\n                my = r[r.length - 1];\n            default:\n                x = r[r.length - 2];\n                y = r[r.length - 1];\n        }\n    }\n    \n    return res;\n};\n\nvar path2curve = function (pathString, pathString2) {\n    if ( typeof pathString === 'string' && !pathString2 && cache.string2curve[pathString] ) {\n        return clone( cache.string2curve[pathString] );\n    }\n\n    var p = path2absolute(pathString),\n        p2 = pathString2 && path2absolute(pathString2),\n        attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n        attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n        processPath = function (path, d, pcom) {\n            var nx, ny, tq = {T:1, Q:1};\n            if (!path) {\n                return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n            }\n            !(path[0] in tq) && (d.qx = d.qy = null);\n            switch (path[0]) {\n                case 'M':\n                    d.X = path[1];\n                    d.Y = path[2];\n                    break;\n                case 'A':\n                    path = ['C'][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\n                    break;\n                case 'S':\n                    if (pcom == 'C' || pcom == 'S') { // In 'S' case we have to take into account, if the previous command is C/S.\n                        nx = d.x * 2 - d.bx;          // And reflect the previous\n                        ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                    }\n                    else {                            // or some else or nothing\n                        nx = d.x;\n                        ny = d.y;\n                    }\n                    path = ['C', nx, ny][concat](path.slice(1));\n                    break;\n                case 'T':\n                    if (pcom == 'Q' || pcom == 'T') { // In 'T' case we have to take into account, if the previous command is Q/T.\n                        d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                        d.qy = d.y * 2 - d.qy;        // to case 'S'.\n                    }\n                    else {                            // or something else or nothing\n                        d.qx = d.x;\n                        d.qy = d.y;\n                    }\n                    path = ['C'][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                    break;\n                case 'Q':\n                    d.qx = path[1];\n                    d.qy = path[2];\n                    path = ['C'][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                    break;\n                case 'L':\n                    path = ['C'][concat](l2c(d.x, d.y, path[1], path[2]));\n                    break;\n                case 'H':\n                    path = ['C'][concat](l2c(d.x, d.y, path[1], d.y));\n                    break;\n                case 'V':\n                    path = ['C'][concat](l2c(d.x, d.y, d.x, path[1]));\n                    break;\n                case 'Z':\n                    path = ['C'][concat](l2c(d.x, d.y, d.X, d.Y));\n                    break;\n            }\n            return path;\n        },\n        fixArc = function (pp, i) {\n            if (pp[i].length > 7) {\n                pp[i].shift();\n                var pi = pp[i];\n                while (pi.length) {\n                    pcoms1[i]='A'; // if created multiple C:s, their original seg is saved\n                    p2 && (pcoms2[i]='A'); // the same as above\n                    pp.splice(i++, 0, ['C'][concat](pi.splice(0, 6)));\n                }\n                pp.splice(i, 1);\n                ii = mmax(p.length, p2 && p2.length || 0);\n            }\n        },\n        fixM = function (path1, path2, a1, a2, i) {\n            if (path1 && path2 && path1[i][0] == 'M' && path2[i][0] != 'M') {\n                path2.splice(i, 0, ['M', a2.x, a2.y]);\n                a1.bx = 0;\n                a1.by = 0;\n                a1.x = path1[i][1];\n                a1.y = path1[i][2];\n                ii = mmax(p.length, p2 && p2.length || 0);\n            }\n        },\n        pcoms1 = [], // path commands of original path p\n        pcoms2 = [], // path commands of original path p2\n        pfirst = '', // temporary holder for original path command\n        pcom = ''; // holder for previous path command of original path\n    for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n        p[i] && (pfirst = p[i][0]); // save current path command\n\n        if (pfirst != 'C') // C is not saved yet, because it may be result of conversion\n        {\n            pcoms1[i] = pfirst; // Save current path command\n            i && ( pcom = pcoms1[i-1]); // Get previous path command pcom\n        }\n        p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n        if (pcoms1[i] != 'A' && pfirst == 'C') pcoms1[i] = 'C'; // A is the only command\n        // which may produce multiple C:s\n        // so we have to make sure that C is also C in original path\n\n        fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n        if (p2) { // the same procedures is done to p2\n            p2[i] && (pfirst = p2[i][0]);\n            if (pfirst != 'C')\n            {\n                pcoms2[i] = pfirst;\n                i && (pcom = pcoms2[i-1]);\n            }\n            p2[i] = processPath(p2[i], attrs2, pcom);\n\n            if (pcoms2[i]!='A' && pfirst=='C') pcoms2[i]='C';\n\n            fixArc(p2, i);\n        }\n        fixM(p, p2, attrs, attrs2, i);\n        fixM(p2, p, attrs2, attrs, i);\n        var seg = p[i],\n            seg2 = p2 && p2[i],\n            seglen = seg.length,\n            seg2len = p2 && seg2.length;\n        attrs.x = seg[seglen - 2];\n        attrs.y = seg[seglen - 1];\n        attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n        attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n        attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n        attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n        attrs2.x = p2 && seg2[seg2len - 2];\n        attrs2.y = p2 && seg2[seg2len - 1];\n    }\n\n    if ( typeof pathString === 'string' && !pathString2 ) {\n        cache.string2curve[pathString] = clone(p);\n    }\n\n    return p2 ? [p, p2] : p;\n};\n\nmodule.exports = {\n    path2absolute: path2absolute,\n    path2curve: path2curve\n};\n"]}