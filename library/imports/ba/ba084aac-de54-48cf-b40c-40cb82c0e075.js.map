{"version":3,"sources":["assets\\scripts\\miniGame\\writeNumber\\NodeWrite.js"],"names":["cc","Class","Component","properties","onLoad","drawing","node","getChildByName","getComponent","Graphics","demoNode","start"],"mappings":";;;;;;AAAAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE,EAHP;AAKLC,EAAAA,MALK,oBAKK;AACN,SAAKC,OAAL,GAAe,KAAKC,IAAL,CAAUC,cAAV,CAAyB,SAAzB,EAAoCC,YAApC,CAAiDR,EAAE,CAACS,QAApD,CAAf;AACA,SAAKC,QAAL,GAAgB,KAAKJ,IAAL,CAAUC,cAAV,CAAyB,UAAzB,CAAhB,CAFM,CAGN;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAnDI;AAqDLI,EAAAA,KArDK,mBAqDI,CAER,CAvDI,CAyDL;;AAzDK,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n    onLoad () {\r\n        this.drawing = this.node.getChildByName('drawing').getComponent(cc.Graphics);\r\n        this.demoNode = this.node.getChildByName('demoNode');\r\n        // this.polygonSprite = this.node.getChildByName('polygonSprite').getComponent(cc.PhysicsPolygonCollider);\r\n        // this.points = this.polygonSprite.points;\r\n        // this.points.forEach(element => element = this.node.convertToWorldSpace(element));\r\n\r\n\r\n        // this.isCheckWrite = false;\r\n        // this.countCheckWrite = 0;\r\n        // this.arrayTouch = [];\r\n        // this.node.on(cc.Node.EventType.TOUCH_START, (touch) => {\r\n        //     // console.error(\"TOUCH START\");\r\n        //     var touchPos = cc.v2(touch.getLocation());\r\n        //     // console.error(\"TOUCH START\", this.polygonSprite.node.convertTouchToNodeSpace(touch));\r\n        //     // console.error(\"TOUCH START\", this.polygonSprite.node.getBoundingBoxToWorld().contains(this.polygonSprite.node.convertTouchToNodeSpace(touch)));\r\n        //     this.arrayTouch.push(touchPos);\r\n        //     this.drawing.lineWidth = 5;\r\n        //     this.drawing.moveTo(touchPos.x, touchPos.y);\r\n\r\n        // }, this);\r\n        // this.node.on(cc.Node.EventType.TOUCH_MOVE, (touch) => {\r\n        //     console.error(\"TOUCH MOVE\");\r\n        //     var touchPos = cc.v2(touch.getLocation());\r\n        //     this.arrayTouch.push(touchPos);\r\n        //     this.drawing.lineTo(touchPos.x, touchPos.y);\r\n        //     this.drawing.strokeColor = new cc.Color(0,133,255,255);\r\n        //     this.drawing.stroke();\r\n        //     this.drawing.circle(touchPos.x, touchPos.y,20);\r\n        //     this.drawing.fill();\r\n        // }, this);\r\n        // this.node.on(cc.Node.EventType.TOUCH_END, (touch) => {\r\n        //     console.error(\"TOUCH END\");\r\n        //     var touchPos = cc.v2(touch.getLocation());\r\n        //     this.arrayTouch.push(touchPos);\r\n        //     for(let i = 0;i < this.arrayTouch.length; i++){\r\n        //         if(!this.demoNode.getBoundingBoxToWorld().contains(this.arrayTouch[i])){\r\n        //             this.drawing.clear();\r\n        //         }else{\r\n        //             this.countCheckWrite++;\r\n        //         }\r\n        //     }\r\n        //     console.error(this.countCheckWrite);\r\n        //     this.arrayTouch = [];\r\n        //     this.countCheckWrite = 0;\r\n        // }, this);\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}