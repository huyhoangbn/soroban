{"version":3,"sources":["assets\\scripts\\miniGame\\raphael\\simplify.js"],"names":["cc","Class","Component","onLoad","path","addComponent","fillColor","lineWidth","showHandles","node","on","Node","EventType","TOUCH_START","onTouchBegan","TOUCH_MOVE","onTouchMoved","TOUCH_END","onTouchEnded","touch","event","touchLoc","getLocation","parent","convertToNodeSpaceAR","points","console","log","push","simplify","update","dt","onBack","destroy"],"mappings":";;;;;;AAAAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGL;AACAC,EAAAA,MAAM,EAAE,kBAAY;AAChB,SAAKC,IAAL,GAAY,KAAKC,YAAL,CAAkB,QAAlB,CAAZ;AACA,SAAKD,IAAL,CAAUE,SAAV,GAAsB,MAAtB;AACA,SAAKF,IAAL,CAAUG,SAAV,GAAsB,EAAtB;AACA,SAAKH,IAAL,CAAUI,WAAV,GAAwB,KAAxB;AACA,SAAKC,IAAL,CAAUC,EAAV,CAAaV,EAAE,CAACW,IAAH,CAAQC,SAAR,CAAkBC,WAA/B,EAA4C,KAAKC,YAAjD,EAA+D,IAA/D;AACA,SAAKL,IAAL,CAAUC,EAAV,CAAaV,EAAE,CAACW,IAAH,CAAQC,SAAR,CAAkBG,UAA/B,EAA2C,KAAKC,YAAhD,EAA8D,IAA9D;AACA,SAAKP,IAAL,CAAUC,EAAV,CAAaV,EAAE,CAACW,IAAH,CAAQC,SAAR,CAAkBK,SAA/B,EAA0C,KAAKC,YAA/C,EAA6D,IAA7D;AACH,GAZI;AAcLJ,EAAAA,YAAY,EAAE,sBAAUK,KAAV,EAAiBC,KAAjB,EAAwB;AAClC,QAAIC,QAAQ,GAAGF,KAAK,CAACG,WAAN,EAAf;AACAD,IAAAA,QAAQ,GAAG,KAAKZ,IAAL,CAAUc,MAAV,CAAiBC,oBAAjB,CAAsCH,QAAtC,CAAX;AAEA,SAAKI,MAAL,GAAc,CAACJ,QAAD,CAAd;AAEA,WAAO,IAAP;AACH,GArBI;AAuBLL,EAAAA,YAAY,EAAE,sBAAUG,KAAV,EAAiBC,KAAjB,EAAwB;AAClC,QAAIC,QAAQ,GAAGF,KAAK,CAACG,WAAN,EAAf;AACAD,IAAAA,QAAQ,GAAG,KAAKZ,IAAL,CAAUc,MAAV,CAAiBC,oBAAjB,CAAsCH,QAAtC,CAAX;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,SAAKI,MAAL,CAAYG,IAAZ,CAAiBP,QAAjB;AACA,SAAKjB,IAAL,CAAUqB,MAAV,CAAiB,KAAKA,MAAtB;AACH,GA7BI;AA+BLP,EAAAA,YAAY,EAAE,sBAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AAClC,SAAKhB,IAAL,CAAUqB,MAAV,CAAiB,KAAKA,MAAtB;AACA,SAAKrB,IAAL,CAAUyB,QAAV;AACH,GAlCI;AAoCL;AACAC,EAAAA,MAAM,EAAE,gBAAUC,EAAV,EAAc,CACrB,CAtCI;AAwCLC,EAAAA,MAxCK,oBAwCI;AACL,SAAKvB,IAAL,CAAUc,MAAV,CAAiBU,OAAjB;AACH;AA1CI,CAAT","sourceRoot":"/","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    // use this for initialization\n    onLoad: function () {\n        this.path = this.addComponent('R.path');\n        this.path.fillColor = 'none';\n        this.path.lineWidth = 30;\n        this.path.showHandles = false;\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchBegan, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMoved, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnded, this);\n    },\n\n    onTouchBegan: function (touch, event) {\n        var touchLoc = touch.getLocation();\n        touchLoc = this.node.parent.convertToNodeSpaceAR(touchLoc);\n\n        this.points = [touchLoc];\n     \n        return true;\n    },\n\n    onTouchMoved: function (touch, event) {\n        var touchLoc = touch.getLocation();\n        touchLoc = this.node.parent.convertToNodeSpaceAR(touchLoc);\n        console.log(touchLoc);\n        this.points.push(touchLoc);\n        this.path.points(this.points);\n    },\n\n    onTouchEnded: function (touch, event) {\n        this.path.points(this.points);\n        this.path.simplify();\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n    },\n\n    onBack() {\n        this.node.parent.destroy();\n    }\n});\n"]}