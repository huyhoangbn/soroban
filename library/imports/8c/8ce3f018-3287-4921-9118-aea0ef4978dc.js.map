{"version":3,"sources":["assets\\scripts\\Abacus.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ResourcePack } from \"./ResourcePack\";\r\nimport { Global } from \"./Global\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Abacus extends cc.Component {\r\n    @property(cc.Node)\r\n    vbars: cc.Node = null;\r\n\r\n    @property(cc.Node) \r\n    hbars: cc.Node = null;\r\n\r\n    resourcePack: ResourcePack = null;\r\n\r\n    rows: cc.Node[] = [];\r\n    score: number = 0;\r\n\r\n    initialized: boolean = false;\r\n\r\n    onLoad(){\r\n        this.initialize();\r\n    }\r\n\r\n    initialize() {\r\n        return new Promise((resolve, reject) => {\r\n            this.rows = [];\r\n\r\n            this.node.children.forEach((value: cc.Node) => {\r\n                if(value.name == \"Row\") this.rows.push(value);\r\n            });\r\n\r\n            this.resourcePack = new ResourcePack();\r\n            this.resourcePack.loadTheme(Global.resourcePack).then(() => {\r\n                this.rows.forEach((value: cc.Node) => {\r\n                    value.getComponent(\"Row\").initialize();\r\n                    value.getComponent(\"Row\").applyTheme(this.resourcePack);\r\n                });\r\n\r\n                this.vbars.children.forEach((value: cc.Node) => {\r\n                    value.getComponent(cc.Sprite).spriteFrame = this.resourcePack.vborder;\r\n                });\r\n\r\n                this.hbars.children.forEach((value: cc.Node) => {\r\n                    if(value.name == \"Middle\")\r\n                        value.getComponent(cc.Sprite).spriteFrame = this.resourcePack.mbar;\r\n                    else\r\n                        value.getComponent(cc.Sprite).spriteFrame = this.resourcePack.hbar;\r\n                });\r\n\r\n                this.initialized = true;\r\n\r\n                resolve(\"\");\r\n            }).catch(error => reject(error));\r\n        });\r\n    }\r\n\r\n    update (dt) {\r\n        if(!this.initialized) return;\r\n\r\n        this.score = 0;\r\n\r\n        this.rows.forEach((value: cc.Node, index: number) => {\r\n            let number = value.getComponent(\"Row\").number;\r\n\r\n            for(let i = this.rows.length - 1 - index; i > 0; --i)\r\n                number *= 10;\r\n\r\n            this.score += number;\r\n        });\r\n    }\r\n\r\n    setInteractive(value: boolean) {\r\n        this.rows.forEach(node => {\r\n            node.getComponent(\"Row\").setInteractive(value);\r\n        });\r\n    }\r\n\r\n    setRowInteractive(row: number, which: number) {\r\n        if(row < 0 || row >= this.rows.length) {\r\n            console.error(\"Invalid row index on Abacus.setRowValue\");\r\n            return;\r\n        }\r\n\r\n        this.rows[row].getComponent(\"Row\").setInteractive(true, which);\r\n    }\r\n\r\n    setRowValue(row: number, value: number) {\r\n        if(row < 0 || row >= this.rows.length) {\r\n            console.error(\"Invalid row index on Abacus.setRowValue\");\r\n            return;\r\n        }\r\n\r\n        this.rows[row].getComponent(\"Row\").setValue(value);\r\n    }\r\n\r\n    reset() {\r\n        this.rows.forEach((value: cc.Node) => {\r\n            value.getComponent(\"Row\").reset();\r\n        });\r\n    }\r\n}\r\n"]}