{"version":3,"sources":["assets\\scripts\\listLesson\\Common.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Global } from \"../Global\";\r\nimport * as  ListLesson  from \"./ListLesson\";\r\n\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class TutorialManager extends cc.Component {\r\n\r\n    @property (cc.ProgressBar)\r\n    progressBar: cc.ProgressBar = null;\r\n\r\n    @property (cc.Node)\r\n    backSplash: cc.Node = null;\r\n\r\n    @property (cc.Node)\r\n    arrowNode: cc.Node = null;\r\n\r\n    @property ([cc.Node])\r\n    listReference: cc.Node[] = [];\r\n\r\n    indexCurrent: number = null;\r\n\r\n    onLoad() {\r\n        this.progressBar.progress = 0;\r\n        this.indexCurrent = 0;\r\n    }\r\n    start(){\r\n        this.listReference[0].active = true;\r\n    }\r\n\r\n    update (dt) {\r\n        if(this.indexCurrent >= this.listReference.length){\r\n            this.backSplash.active = true;\r\n            this.listReference[this.indexCurrent-1].active = false;\r\n            this.indexCurrent -= 1;\r\n        }\r\n    }\r\n\r\n    loadMenu() {\r\n        if(Global.firstTime) Global.firstTime = false;\r\n        cc.director.loadScene(\"scenes/menu\");\r\n    }\r\n\r\n    loadListLesson() {\r\n        if(Global.firstTime) Global.firstTime = false;\r\n        cc.director.loadScene(\"scenes/listLesson\");\r\n    }\r\n\r\n    loadNextLesson(){\r\n        let nextLesson = Global.currentLesson + 1;\r\n        console.error(nextLesson);\r\n        console.error(typeof Global.currentLesson);\r\n        cc.resources.load(\"prefabs/lesson/Lesson\" + nextLesson , cc.Prefab, (error: Error, asset: cc.Prefab) => {\r\n            if(error) {\r\n                console.error(error);\r\n            } else {\r\n                let node = cc.instantiate(asset);\r\n                node.setContentSize(cc.winSize.width, cc.winSize.height);\r\n                this.node.addChild(node);\r\n                Global.currentLesson = (Global.currentLesson+1);\r\n            }          \r\n        });\r\n    }\r\n\r\n    nextProgress(){\r\n        this.progressBar.progress += 1 / (this.listReference.length-1);\r\n\r\n        this.indexCurrent += 1;\r\n\r\n        if(this.indexCurrent >= this.listReference.length){\r\n            return;\r\n        }\r\n        this.listReference[this.indexCurrent].active = true;\r\n        this.listReference[this.indexCurrent-1].active = false;\r\n    }\r\n \r\n}\r\n"]}