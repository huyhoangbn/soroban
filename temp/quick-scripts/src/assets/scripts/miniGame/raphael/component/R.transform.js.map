{"version":3,"sources":["assets\\scripts\\miniGame\\raphael\\component\\R.transform.js"],"names":["Transform","properties","_scale","cc","v2","type","Vec2","_position","_rotation","_flipX","_flipY","_transform","a","b","c","d","tx","ty","serializable","_worldTransform","_transformDirty","notify","parent","_dirty","scale","get","set","value","equals","position","rotation","flipX","flipY","_transformCommand","cmd","t","length","slice","tempPoint","i","ii","j","x","y","AffineTransform","transformVec2","getTransform","scaleX","scaleY","positionX","positionY","rotationRadians","Math","sin","cos","sx","sy","getWorldTransform","concat","identity","updateTransform","parentTransformDirty","children","child","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["\nvar Transform = {\n\n    properties: {\n        _scale: {\n            default: cc.v2(1, 1),\n            type: cc.Vec2\n        },\n        _position: {\n            default: cc.v2(0,0),\n            type: cc.Vec2\n        },\n        _rotation: 0,\n        \n        _flipX: false,\n        _flipY: false,\n\n        _transform: {\n            default: function () {\n                return {a: 1, b: 0, c: 0, d: 1, tx: 0, ty: 0};\n            },\n            serializable: false\n        },\n\n        _worldTransform: {\n            default: function () {\n                return {a: 1, b: 0, c: 0, d: 1, tx: 0, ty: 0};\n            },\n            serializable: false\n        },\n\n        _transformDirty: {\n            default: true,\n            serializable: false,\n\n            notify: function () {\n                if (this._transformDirty) {\n                    if (this.parent) {\n                        this.parent._transformDirty = true;\n                    }\n\n                    this._dirty = true;\n                }\n            }\n        },\n\n        scale: {\n            get: function () {\n                return this._scale;\n            },\n            set: function (value) {\n                if (this._scale.equals(value)) {\n                    return;\n                }\n                this._scale = value;\n                this._transformDirty = true;\n            }\n        },\n\n        position: {\n            get: function () {\n                return this._position;\n            },\n            set: function (value) {\n                if (this._position.equals(value)) {\n                    return;\n                }\n                this._position = value;\n                this._transformDirty = true;\n            }\n        },\n\n        rotation: {\n            get: function () {\n                return this._rotation;\n            },\n            set: function (value) {\n                if (this._rotation === value) {\n                    return;\n                }\n                this._rotation = value;\n                this._transformDirty = true;\n            }\n        },\n\n\n        flipX: {\n            get: function () {\n                return this._flipX;\n            },\n            set: function (value) {\n                if (this._flipX === value) {\n                    return;\n                }\n                this._flipX = value;\n                this._transformDirty = true;\n            }\n        },\n\n        flipY: {\n            get: function () {\n                return this._flipY;\n            },\n            set: function (value) {\n                if (this._flipY === value) {\n                    return;\n                }\n                this._flipY = value;\n                this._transformDirty = true;\n            }\n        },\n    },\n\n    _transformCommand: function (cmd, t) {\n        if (cmd.length <= 1) {\n            return cmd;\n        }\n        \n        cmd = cmd.slice(1, cmd.length);\n\n        if (t.a === 1 && t.d === 1 &&\n            t.b === 0 && t.c === 0 &&\n            t.tx === 0 && t.ty === 0) {\n            return cmd;\n        }\n\n        var tempPoint = cc.v2();\n\n        for (var i = 0, ii = cmd.length / 2; i < ii; i++) {\n            var j = i*2;\n            tempPoint.x = cmd[j];\n            tempPoint.y = cmd[j + 1];\n\n            tempPoint = cc.AffineTransform.transformVec2(cc.v2(0, 0), tempPoint, t);\n\n            cmd[j] = tempPoint.x;\n            cmd[j+1] = tempPoint.y;\n        }\n\n        return cmd;\n    },\n\n    getTransform: function () {\n        if (this._transformDirty) {\n            var scaleX = this.flipX ? -this._scale.x : this._scale.x;\n            var scaleY = this.flipY ? -this._scale.y : this._scale.y;\n            var positionX = this._position.x;\n            var positionY = this._position.y;\n            var rotation = this._rotation;\n\n            var t = this._transform;\n            t.tx = positionX;\n            t.ty = positionY;\n            t.a = t.d = 1;\n            t.b = t.c = 0;\n\n            // rotation Cos and Sin\n            if (rotation) {\n                var rotationRadians = rotation * 0.017453292519943295;  //0.017453292519943295 = (Math.PI / 180);   for performance\n                t.c = Math.sin(rotationRadians);\n                t.d = Math.cos(rotationRadians);\n                t.a = t.d;\n                t.b = -t.c;\n            }\n\n            // Firefox on Vista and XP crashes\n            // GPU thread in case of scale(0.0, 0.0)\n            var sx = (scaleX < 0.000001 && scaleX > -0.000001) ? 0.000001 : scaleX,\n                sy = (scaleY < 0.000001 && scaleY > -0.000001) ? 0.000001 : scaleY;\n\n            // scale\n            if (scaleX !== 1 || scaleY !== 1) {\n                t.a *= sx;\n                t.b *= sx;\n                t.c *= sy;\n                t.d *= sy;\n            }\n\n            this._transformDirty = false;\n        }\n\n        return this._transform;\n    },\n\n    getWorldTransform: function () {\n        if (this.parent) {\n            return cc.AffineTransform.concat(cc.AffineTransform.identity, this.parent.getWorldTransform(), this.getTransform());\n        }\n\n        return this.getTransform();\n    },\n\n    updateTransform: function (parentTransformDirty) {\n        if (this._transformDirty || parentTransformDirty) {\n            var scaleX = this.flipX ? -this._scale.x : this._scale.x;\n            var scaleY = this.flipY ? -this._scale.y : this._scale.y;\n            var positionX = this._position.x;\n            var positionY = this._position.y;\n            var rotation = this._rotation;\n\n            var t = this._transform;\n            t.tx = positionX;\n            t.ty = positionY;\n            t.a = t.d = 1;\n            t.b = t.c = 0;\n\n            // rotation Cos and Sin\n            if (rotation) {\n                var rotationRadians = rotation * 0.017453292519943295;  //0.017453292519943295 = (Math.PI / 180);   for performance\n                t.c = Math.sin(rotationRadians);\n                t.d = Math.cos(rotationRadians);\n                t.a = t.d;\n                t.b = -t.c;\n            }\n\n            // Firefox on Vista and XP crashes\n            // GPU thread in case of scale(0.0, 0.0)\n            var sx = (scaleX < 0.000001 && scaleX > -0.000001) ? 0.000001 : scaleX,\n                sy = (scaleY < 0.000001 && scaleY > -0.000001) ? 0.000001 : scaleY;\n\n            // scale\n            if (scaleX !== 1 || scaleY !== 1) {\n                t.a *= sx;\n                t.b *= sx;\n                t.c *= sy;\n                t.d *= sy;\n            }\n        }\n\n        if (this.parent) {\n            this._worldTransform = cc.AffineTransform.concat(cc.AffineTransform.identity, this.parent._worldTransform, this._transform);\n        }\n        else {\n            this._worldTransform = this._transform;\n        }\n\n        var children = this.children;\n        if (children) {\n            for (var i = 0, ii = children.length; i < ii; i++) {\n                var child = children[i];\n                child.updateTransform(parentTransformDirty || this._transformDirty);\n            }\n        }        \n\n        this._transformDirty = false;\n    }\n};\n\nmodule.exports = Transform;\n"]}